<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AMZN' inline='true' name='federated.0flbprh0ad3tda1dkm2ns0mevnx2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AMZN' name='textscan.0m9s4ff112ej2k1ak3mz80v78m0e'>
            <connection class='textscan' directory='C:/Users/Pranav/Downloads/Mini-Project I' filename='AMZN.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0m9s4ff112ej2k1ak3mz80v78m0e' name='AMZN.csv' table='[AMZN#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
            <column datatype='real' name='Adj Close' ordinal='5' />
            <column datatype='integer' name='Volume' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adj Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adj Close]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>Adj Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[AMZN.csv]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871201796098]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If AVG([Open]) &gt; AVG([Close])THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
      </column>
      <column caption='Open &lt; Close' datatype='real' name='[Calculation_581245871202017283]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Open]) &lt; AVG([Close]) THEN AVG([Close]) END' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[High]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open &gt; Close ' datatype='real' name='[Open &lt; Close (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Open]) &gt; AVG([Close]) THEN AVG([Close]) END' />
      </column>
      <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_581245871201796098]' derivation='User' name='[usr:Calculation_581245871201796098:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Date,MDY(Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date:ok]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.35528' measure-ordering='alphabetic' measure-percentage='0.64472' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:Low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:High:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:High:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_581245871201796098:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Growth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Decline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='AAPL' inline='true' name='federated.0e8ilet0ptcou112gqevu1nm2o7f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AAPL' name='textscan.1bav97115yrkif1bg3hli1djl41a'>
            <connection class='textscan' directory='C:/Users/Pranav/Downloads/Mini-Project I' filename='AAPL.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bav97115yrkif1bg3hli1djl41a' name='AAPL.csv' table='[AAPL#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
            <column datatype='real' name='Adj Close' ordinal='5' />
            <column datatype='integer' name='Volume' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adj Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adj Close]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>Adj Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[AAPL.csv]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:Volume:qk]&quot;' value='Volume AAPL' />
          <alias key='&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:Volume:qk]&quot;' value='Volume AMZN' />
        </aliases>
      </column>
      <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
      <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871200468992]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Open]) &gt; AVG([Close]) THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
      </column>
      <column caption='Open &gt; Close' datatype='real' name='[Calculation_581245871200722945]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  AVG([Open]) &gt; AVG([Close])THEN AVG([Close])END' />
      </column>
      <column datatype='real' name='[Close]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[High]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open &lt; Close ' datatype='real' name='[Open &gt; Close (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  AVG([Open]) &lt; AVG([Close])THEN AVG([Close])END' />
      </column>
      <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
      <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Sum' name='[sum:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_581245871200468992]' derivation='User' name='[usr:Calculation_581245871200468992:nk]' pivot='key' type='nominal' />
      <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group hidden='true' name='[Inclusions (Date,MDY(Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date:ok]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.35528' measure-ordering='alphabetic' measure-percentage='0.64472' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:High:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:Adj Close:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:High:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[win:sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[win:sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:Adj Close:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[win:sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[sum:Adj Close:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[win:sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:Low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:Low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:Adj Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[sum:Close:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_581245871200468992:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Growth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Decline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0flbprh0ad3tda1dkm2ns0mevnx2'>
        <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
        <column datatype='real' name='[Close]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
        <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
          <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
        </column-instance>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0z1lhuz1kovazl1f03eb40qlib3o'>
        <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
        <column datatype='real' name='[Close]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
        <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
          <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
        </column-instance>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1hn3tdw1a884111di7f2t1run976'>
        <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
        <column datatype='real' name='[Close]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
        <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
          <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
        </column-instance>
      </datasource-dependencies>
    </datasource>
    <datasource caption='MSFT' inline='true' name='federated.1hn3tdw1a884111di7f2t1run976' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MSFT' name='textscan.02enh611xr9zbm18gr36a1vgck4t'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Pranav/Downloads/Mini-Project I/MSFT.csv' dataRefreshTime='' directory='C:/Users/Pranav/Downloads/Mini-Project I' filename='C:/Users/Pranav/AppData/Local/Temp/TableauTemp/0e3nb2b0u6ob4j19oau0102i0wwr/MSFT.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.02enh611xr9zbm18gr36a1vgck4t' name='MSFT.csv' table='[MSFT#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:G253:no:A1:G253:1' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
            <column datatype='real' name='Adj Close' ordinal='5' />
            <column datatype='integer' name='Volume' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adj Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adj Close]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>Adj Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MSFT.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G253:no:A1:G253:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1764</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871204884488]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Open])&gt;AVG([Close])THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
      </column>
      <column caption='Open &gt; Close' datatype='real' name='[Calculation_581245871205089289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Open])&gt;AVG([Close])THEN AVG([Close])END' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[High]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open &lt; Close ' datatype='real' name='[Open &gt; Close (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Open])&lt; AVG([Close])THEN AVG([Close])END' />
      </column>
      <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_581245871204884488]' derivation='User' name='[usr:Calculation_581245871204884488:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Date,MDY(Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date:ok]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.35528' measure-ordering='alphabetic' measure-percentage='0.64472' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[avg:Low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[avg:High:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hn3tdw1a884111di7f2t1run976].[sum:High:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_581245871204884488:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Growth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Decline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GOOGL' inline='true' name='federated.0z1lhuz1kovazl1f03eb40qlib3o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GOOGL' name='textscan.1cyceqm15h0hiq110fo2q078jhyv'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Pranav/Downloads/Mini-Project I/GOOGL.csv' dataRefreshTime='' directory='C:/Users/Pranav/Downloads/Mini-Project I' filename='C:/Users/Pranav/AppData/Local/Temp/TableauTemp/1iff8j00pxizpr16ganvu0k1qji3/GOOGL.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1cyceqm15h0hiq110fo2q078jhyv' name='GOOGL.csv' table='[GOOGL#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:G253:no:A1:G253:1' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
            <column datatype='real' name='Adj Close' ordinal='5' />
            <column datatype='integer' name='Volume' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adj Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adj Close]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>Adj Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GOOGL.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G253:no:A1:G253:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1764</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871203176453]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Open]) &gt; AVG([Close]) THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
      </column>
      <column caption='Open &gt; Close' datatype='real' name='[Calculation_581245871203418118]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Open])&gt;AVG([Close])THEN AVG([Close])END' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[High]' role='measure' type='quantitative' />
      <column datatype='real' name='[Low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open &lt; Close ' datatype='real' name='[Open &gt; Close (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Open])&lt;AVG([Close])THEN AVG([Close])END' />
      </column>
      <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[High]' derivation='Sum' name='[sum:High:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Low]' derivation='Sum' name='[sum:Low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_581245871203176453]' derivation='User' name='[usr:Calculation_581245871203176453:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Date,MDY(Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date:ok]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.35528' measure-ordering='alphabetic' measure-percentage='0.64472' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:High:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:High:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:Low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:Low:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_581245871203176453:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Growth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Decline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AAPL'>
      <table>
        <view>
          <datasources>
            <datasource caption='AAPL' name='federated.0e8ilet0ptcou112gqevu1nm2o7f' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8ilet0ptcou112gqevu1nm2o7f'>
            <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871200468992]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Open]) &gt; AVG([Close]) THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
            </column>
            <column caption='Open &gt; Close' datatype='real' name='[Calculation_581245871200722945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  AVG([Open]) &gt; AVG([Close])THEN AVG([Close])END' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column caption='Open &lt; Close ' datatype='real' name='[Open &gt; Close (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  AVG([Open]) &lt; AVG([Close])THEN AVG([Close])END' />
            </column>
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Avg' name='[avg:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_581245871200468992]' derivation='User' name='[usr:Calculation_581245871200468992:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_581245871200722945]' derivation='User' name='[usr:Calculation_581245871200722945:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open &gt; Close (copy)]' derivation='User' name='[usr:Open &gt; Close (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:High:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:Low:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Inclusions (Date,MDY(Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181224' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-24#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181226' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181227' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181228' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181231' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-31#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190102' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-02#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190108' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190109' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-09#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190110' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-10#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190111' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190114' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190115' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190116' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-16#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190117' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-17#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190118' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190122' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190123' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-23#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190124' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-24#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190125' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190128' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190129' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-29#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190130' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-30#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190131' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-31#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190201' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190204' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190205' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190206' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190207' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190208' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190211' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190212' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190213' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190214' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190215' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190219' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190220' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190221' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190222' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190225' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190226' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190227' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190228' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190301' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190304' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190305' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190306' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190307' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190308' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190311' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190312' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190313' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190314' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190315' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190318' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190319' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190320' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190321' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190322' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190325' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190326' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190327' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190328' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190329' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-29#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Date:ok]' />
                <hierarchy name='[md:Date:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-06#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</column>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Inclusions (Date,MDY(Date))]</column>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]' scope='rows' value='Price' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200468992:nk]' />
              <lod column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[md:Date:ok]' />
              <lod column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:Open:qk]' />
              <lod column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Open &gt; Close (copy):qk]' />
              <lod column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200722945:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' paired-id='refline3' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:Open:qk]' z-order='1' />
            <reference-line axis-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-id='refline2' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Open &gt; Close (copy):qk]' z-order='1' />
            <reference-line axis-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline4' label-type='none' paired-id='refline5' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200722945:qk]' z-order='2' />
            <reference-line axis-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-id='refline4' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[avg:Open:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]</rows>
        <cols>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{503C3C5F-8610-4853-8FCC-EE026E608A47}' />
    </worksheet>
    <worksheet name='AMZN'>
      <table>
        <view>
          <datasources>
            <datasource caption='AMZN' name='federated.0flbprh0ad3tda1dkm2ns0mevnx2' />
          </datasources>
          <datasource-dependencies datasource='federated.0flbprh0ad3tda1dkm2ns0mevnx2'>
            <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871201796098]' role='measure' type='nominal'>
              <calculation class='tableau' formula='If AVG([Open]) &gt; AVG([Close])THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
            </column>
            <column caption='Open &lt; Close' datatype='real' name='[Calculation_581245871202017283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Open]) &lt; AVG([Close]) THEN AVG([Close]) END' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column caption='Open &gt; Close ' datatype='real' name='[Open &lt; Close (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Open]) &gt; AVG([Close]) THEN AVG([Close]) END' />
            </column>
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Avg' name='[avg:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_581245871201796098]' derivation='User' name='[usr:Calculation_581245871201796098:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_581245871202017283]' derivation='User' name='[usr:Calculation_581245871202017283:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open &lt; Close (copy)]' derivation='User' name='[usr:Open &lt; Close (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:High:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:Low:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Inclusions (Date,MDY(Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181228' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20181231' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2018-12-31#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190102' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-02#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190103' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-03#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190104' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190107' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190108' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190109' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-09#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190110' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-10#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190111' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190114' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190115' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190116' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-16#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190117' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-17#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190118' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190122' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190123' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-23#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190124' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-24#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190125' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190128' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190129' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-29#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190130' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-30#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190131' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-31#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190201' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190204' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190205' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190206' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190207' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190208' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190211' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190212' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190213' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190214' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190215' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190219' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190220' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190221' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190222' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190225' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190226' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190227' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190228' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190301' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190304' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190305' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190306' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190307' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190308' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190311' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190312' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190313' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190314' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190315' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190318' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190319' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190320' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190321' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190322' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190325' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190326' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190327' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190328' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190329' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-29#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190401' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-04-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190402' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-04-02#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Date:ok]' />
                <hierarchy name='[md:Date:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-21#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[:Measure Names]</column>
            <column>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Inclusions (Date,MDY(Date))]</column>
            <column>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]' scope='rows' value='Price' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Calculation_581245871201796098:nk]' />
              <lod column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[md:Date:ok]' />
              <lod column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:Open:qk]' />
              <lod column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Calculation_581245871202017283:qk]' />
              <lod column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Open &lt; Close (copy):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' paired-id='refline3' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:Open:qk]' z-order='1' />
            <reference-line axis-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-id='refline2' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Calculation_581245871202017283:qk]' z-order='1' />
            <reference-line axis-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline4' label-type='none' paired-id='refline5' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Open &lt; Close (copy):qk]' z-order='2' />
            <reference-line axis-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-id='refline4' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[avg:Open:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[Multiple Values]</rows>
        <cols>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{65026620-0DE6-42F1-8042-82007342373F}' />
    </worksheet>
    <worksheet name='Adjusted Close'>
      <table>
        <view>
          <datasources>
            <datasource caption='AAPL' name='federated.0e8ilet0ptcou112gqevu1nm2o7f' />
            <datasource caption='AMZN' name='federated.0flbprh0ad3tda1dkm2ns0mevnx2' />
            <datasource caption='GOOGL' name='federated.0z1lhuz1kovazl1f03eb40qlib3o' />
            <datasource caption='MSFT' name='federated.1hn3tdw1a884111di7f2t1run976' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8ilet0ptcou112gqevu1nm2o7f'>
            <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0flbprh0ad3tda1dkm2ns0mevnx2'>
            <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
            <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0z1lhuz1kovazl1f03eb40qlib3o'>
            <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
            <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hn3tdw1a884111di7f2t1run976'>
            <column datatype='real' name='[Adj Close]' role='measure' type='quantitative' />
            <column-instance column='[Adj Close]' derivation='Sum' name='[sum:Adj Close:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:Adj Close:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:Adj Close:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:Adj Close:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hn3tdw1a884111di7f2t1run976].[sum:Adj Close:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' included-values='in-range'>
            <min>#2018-04-03#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</column>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]</rows>
        <cols>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{DC82E403-5619-4848-9D2A-6CB340E168EB}' />
    </worksheet>
    <worksheet name='GOOGL'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGL' name='federated.0z1lhuz1kovazl1f03eb40qlib3o' />
          </datasources>
          <datasource-dependencies datasource='federated.0z1lhuz1kovazl1f03eb40qlib3o'>
            <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871203176453]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Open]) &gt; AVG([Close]) THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
            </column>
            <column caption='Open &gt; Close' datatype='real' name='[Calculation_581245871203418118]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Open])&gt;AVG([Close])THEN AVG([Close])END' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column caption='Open &lt; Close ' datatype='real' name='[Open &gt; Close (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Open])&lt;AVG([Close])THEN AVG([Close])END' />
            </column>
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Avg' name='[avg:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_581245871203176453]' derivation='User' name='[usr:Calculation_581245871203176453:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_581245871203418118]' derivation='User' name='[usr:Calculation_581245871203418118:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open &gt; Close (copy)]' derivation='User' name='[usr:Open &gt; Close (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:High:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:Low:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Inclusions (Date,MDY(Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190107' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190108' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190109' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-09#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190110' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-10#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190111' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190114' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190115' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190116' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-16#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190117' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-17#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190118' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190122' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190123' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-23#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190124' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-24#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190125' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190128' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190129' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-29#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190130' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-30#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190131' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-01-31#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190201' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190204' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190205' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190206' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190207' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190208' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190211' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190212' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190213' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190214' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190215' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190219' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190220' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190221' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190222' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190225' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190226' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190227' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190228' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190301' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190304' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190305' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190306' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190307' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190308' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190311' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190312' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190313' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190314' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190315' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190318' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190319' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190320' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190321' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190322' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190325' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190326' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190327' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190328' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190329' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-29#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190401' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-04-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190402' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-04-02#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Date:ok]' />
                <hierarchy name='[md:Date:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-21#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[:Measure Names]</column>
            <column>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Inclusions (Date,MDY(Date))]</column>
            <column>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]' scope='rows' value='Price' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Calculation_581245871203176453:nk]' />
              <lod column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[md:Date:ok]' />
              <lod column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:Open:qk]' />
              <lod column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Open &gt; Close (copy):qk]' />
              <lod column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Calculation_581245871203418118:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' paired-id='refline3' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:Open:qk]' z-order='1' />
            <reference-line axis-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]' enable-instant-analytics='false' formula='average' id='refline3' label-type='none' paired-id='refline2' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Open &gt; Close (copy):qk]' z-order='1' />
            <reference-line axis-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline4' label-type='none' paired-id='refline5' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Calculation_581245871203418118:qk]' z-order='2' />
            <reference-line axis-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-id='refline4' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[avg:Open:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[Multiple Values]</rows>
        <cols>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{C3A5D54E-1B6A-428F-9A66-EFC5C2ED3DE7}' />
    </worksheet>
    <worksheet name='MSFT'>
      <table>
        <view>
          <datasources>
            <datasource caption='MSFT' name='federated.1hn3tdw1a884111di7f2t1run976' />
          </datasources>
          <datasource-dependencies datasource='federated.1hn3tdw1a884111di7f2t1run976'>
            <column caption='Decline/Growth' datatype='string' name='[Calculation_581245871204884488]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Open])&gt;AVG([Close])THEN &apos;Decline&apos; ELSE &apos;Growth&apos; END' />
            </column>
            <column caption='Open &gt; Close' datatype='real' name='[Calculation_581245871205089289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Open])&gt;AVG([Close])THEN AVG([Close])END' />
            </column>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[High]' role='measure' type='quantitative' />
            <column datatype='real' name='[Low]' role='measure' type='quantitative' />
            <column caption='Open &lt; Close ' datatype='real' name='[Open &gt; Close (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Open])&lt; AVG([Close])THEN AVG([Close])END' />
            </column>
            <column datatype='real' name='[Open]' role='measure' type='quantitative' />
            <column-instance column='[High]' derivation='Avg' name='[avg:High:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Low]' derivation='Avg' name='[avg:Low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open]' derivation='Avg' name='[avg:Open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_581245871204884488]' derivation='User' name='[usr:Calculation_581245871204884488:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_581245871205089289]' derivation='User' name='[usr:Calculation_581245871205089289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open &gt; Close (copy)]' derivation='User' name='[usr:Open &gt; Close (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hn3tdw1a884111di7f2t1run976].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hn3tdw1a884111di7f2t1run976].[avg:High:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hn3tdw1a884111di7f2t1run976].[avg:Low:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hn3tdw1a884111di7f2t1run976].[Inclusions (Date,MDY(Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190207' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190208' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190211' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190212' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190213' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190214' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190215' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190219' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190220' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190221' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190222' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190225' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190226' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190227' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190228' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-02-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190301' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190304' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-04#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190305' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-05#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190306' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-06#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190307' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-07#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190308' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-08#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190311' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-11#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190312' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-12#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190313' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-13#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190314' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-14#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190315' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-15#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190318' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-18#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190319' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-19#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190320' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-20#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190321' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-21#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190322' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-22#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190325' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-25#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190326' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-26#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190327' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-27#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190328' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-28#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190329' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-03-29#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190401' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-04-01#' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[md:Date:ok]' member='20190402' />
                  <groupfilter function='member' level='[none:Date:ok]' member='#2019-04-02#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Date:ok]' />
                <hierarchy name='[md:Date:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]' included-values='in-range'>
            <min>#2018-04-03#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.1hn3tdw1a884111di7f2t1run976].[:Measure Names]</column>
            <column>[federated.1hn3tdw1a884111di7f2t1run976].[Inclusions (Date,MDY(Date))]</column>
            <column>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]' scope='rows' value='Price' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Calculation_581245871204884488:nk]' />
              <lod column='[federated.1hn3tdw1a884111di7f2t1run976].[md:Date:ok]' />
              <lod column='[federated.1hn3tdw1a884111di7f2t1run976].[avg:Open:qk]' />
              <lod column='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Open &gt; Close (copy):qk]' />
              <lod column='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Calculation_581245871205089289:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' paired-id='refline3' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1hn3tdw1a884111di7f2t1run976].[avg:Open:qk]' z-order='1' />
            <reference-line axis-column='[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-id='refline2' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Open &gt; Close (copy):qk]' z-order='1' />
            <reference-line axis-column='[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline4' label-type='none' paired-id='refline5' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Calculation_581245871205089289:qk]' z-order='2' />
            <reference-line axis-column='[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-id='refline4' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1hn3tdw1a884111di7f2t1run976].[avg:Open:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1hn3tdw1a884111di7f2t1run976].[Multiple Values]</rows>
        <cols>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{B5EE659A-FB1B-4AD7-AA6C-BA751ADBFFCD}' />
    </worksheet>
    <worksheet name='SMA_AAPL'>
      <table>
        <view>
          <datasources>
            <datasource caption='AAPL' name='federated.0e8ilet0ptcou112gqevu1nm2o7f' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8ilet0ptcou112gqevu1nm2o7f'>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-10#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[win:sum:Close:qk]</rows>
        <cols>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{F51EDF95-56DB-4D4B-A346-D91AB9E6B419}' />
    </worksheet>
    <worksheet name='SMA_AMZN'>
      <table>
        <view>
          <datasources>
            <datasource caption='AMZN' name='federated.0flbprh0ad3tda1dkm2ns0mevnx2' />
          </datasources>
          <datasource-dependencies datasource='federated.0flbprh0ad3tda1dkm2ns0mevnx2'>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-10#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[win:sum:Close:qk]</rows>
        <cols>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{FE701D4D-999E-4851-9EDB-882B8C6E4855}' />
    </worksheet>
    <worksheet name='SMA_GOOGL'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGL' name='federated.0z1lhuz1kovazl1f03eb40qlib3o' />
          </datasources>
          <datasource-dependencies datasource='federated.0z1lhuz1kovazl1f03eb40qlib3o'>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]' included-values='in-range'>
            <min>#2018-12-24#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[win:sum:Close:qk]</rows>
        <cols>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{FCE8C6B8-94B5-4E55-A185-175342B4A8CD}' />
    </worksheet>
    <worksheet name='SMA_MSFT'>
      <table>
        <view>
          <datasources>
            <datasource caption='MSFT' name='federated.1hn3tdw1a884111di7f2t1run976' />
          </datasources>
          <datasource-dependencies datasource='federated.1hn3tdw1a884111di7f2t1run976'>
            <column datatype='real' name='[Close]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Close]' derivation='Sum' name='[win:sum:Close:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-08#</min>
            <max>#2019-04-02#</max>
          </filter>
          <slices>
            <column>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hn3tdw1a884111di7f2t1run976].[win:sum:Close:qk]</rows>
        <cols>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{6D7DE4C1-2E14-4C23-9DCB-B6345A2BCDE8}' />
    </worksheet>
    <worksheet name='Volume Traded'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Volume Traded (AAPL VS AMZN)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AAPL' name='federated.0e8ilet0ptcou112gqevu1nm2o7f' />
            <datasource caption='AMZN' name='federated.0flbprh0ad3tda1dkm2ns0mevnx2' />
            <datasource caption='GOOGL' name='federated.0z1lhuz1kovazl1f03eb40qlib3o' />
            <datasource caption='MSFT' name='federated.1hn3tdw1a884111di7f2t1run976' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8ilet0ptcou112gqevu1nm2o7f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0flbprh0ad3tda1dkm2ns0mevnx2'>
            <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0z1lhuz1kovazl1f03eb40qlib3o'>
            <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hn3tdw1a884111di7f2t1run976'>
            <column datatype='integer' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z1lhuz1kovazl1f03eb40qlib3o].[sum:Volume:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hn3tdw1a884111di7f2t1run976].[sum:Volume:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e8ilet0ptcou112gqevu1nm2o7f].[sum:Volume:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[sum:Volume:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' included-values='in-range'>
            <min>#2019-01-02#</min>
            <max>#2019-04-01#</max>
          </filter>
          <slices>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</column>
            <column>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[Multiple Values]</rows>
        <cols>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{B222C0C4-CB2E-4135-AD1D-B51C7D6BC4C2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Stock Comparison'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='26' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='7' param='horz' type='layout-flow' w='89378' x='483' y='929'>
              <zone h='98142' id='5' type='layout-basic' w='89378' x='483' y='929'>
                <zone h='49071' id='9' name='AMZN' w='44691' x='45170' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49071' id='11' name='GOOGL' w='44682' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49071' id='13' name='MSFT' w='44696' x='45165' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49071' id='24' name='AAPL' w='44687' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='25' is-fixed='true' param='vert' type='layout-flow' w='9656' x='89861' y='929'>
              <zone h='8362' id='28' name='AAPL' pane-specification-id='0' param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200468992:nk]' type='color' w='9656' x='89861' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='36' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='49071' id='24' is-fixed='true' name='AAPL' w='44687' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8362' id='28' name='AAPL' pane-specification-id='0' param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200468992:nk]' type='color' w='9656' x='89861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='9' is-fixed='true' name='AMZN' w='44691' x='45170' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='11' is-fixed='true' name='GOOGL' w='44682' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='13' is-fixed='true' name='MSFT' w='44696' x='45165' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4CD0F47D-28A1-45F2-820D-131303DCC6D4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='AAPL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200468992:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[md:Date:ok]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[usr:Calculation_581245871200468992:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FC9703F-E664-435D-93DE-84203CEAEF5E}' />
    </window>
    <window class='worksheet' name='AMZN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Calculation_581245871201796098:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[:Measure Names]</field>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[md:Date:ok]</field>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:ok]</field>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]</field>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Calculation_581245871201796098:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A07F6CF2-3932-47B5-A023-CEC2441C54AC}' />
    </window>
    <window class='worksheet' name='GOOGL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Calculation_581245871203176453:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[:Measure Names]</field>
            <field>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[md:Date:ok]</field>
            <field>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:ok]</field>
            <field>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C43AF789-575A-4117-8B9B-4D67A5B71900}' />
    </window>
    <window class='worksheet' name='MSFT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Calculation_581245871204884488:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</field>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[:Measure Names]</field>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[md:Date:ok]</field>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:ok]</field>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]</field>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[usr:Calculation_581245871204884488:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F79D269-83E5-4016-B612-B6F32875DAA1}' />
    </window>
    <window class='worksheet' name='SMA_AAPL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBE635B4-0172-4720-9B60-CFCC6C0D8380}' />
    </window>
    <window class='worksheet' name='SMA_AMZN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:ok]</field>
            <field>[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{698A41E4-F1C4-4A56-B603-82A466D37213}' />
    </window>
    <window class='worksheet' name='SMA_GOOGL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:ok]</field>
            <field>[federated.0z1lhuz1kovazl1f03eb40qlib3o].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{956C930C-138E-4E54-AF90-FD4074152FD2}' />
    </window>
    <window class='worksheet' name='SMA_MSFT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:ok]</field>
            <field>[federated.1hn3tdw1a884111di7f2t1run976].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA7D980E-AD02-487E-93B7-1AF22FE51A3C}' />
    </window>
    <window class='worksheet' name='Volume Traded'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E77378B-C9B0-4810-8629-68EF5D7DCAC1}' />
    </window>
    <window class='worksheet' name='Adjusted Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[:Measure Names]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:ok]</field>
            <field>[federated.0e8ilet0ptcou112gqevu1nm2o7f].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{882382F5-ED4D-443C-A61B-1F0A6E15877E}' />
    </window>
    <window class='dashboard' maximized='true' name='Stock Comparison'>
      <viewpoints>
        <viewpoint name='AAPL'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='AMZN'>
          <zoom type='entire-view' />
          <highlight field='[federated.0flbprh0ad3tda1dkm2ns0mevnx2].[usr:Calculation_581245871201796098:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GOOGL'>
          <zoom type='entire-view' />
          <highlight field='[federated.0z1lhuz1kovazl1f03eb40qlib3o].[usr:Calculation_581245871203176453:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='MSFT'>
          <zoom type='entire-view' />
          <highlight field='[federated.1hn3tdw1a884111di7f2t1run976].[usr:Calculation_581245871204884488:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{0A4D2693-5A19-426E-8E8E-DFFD9E4DB7B1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AAPL' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='AMZN' width='192'>
      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
      95HMxiMA4P8DQnqp+0L8/gcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Adjusted Close' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GOOGL' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MSFT' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='SMA_AAPL' width='192'>
      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
      pqsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SMA_AMZN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SMA_GOOGL' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SMA_MSFT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stock Comparison' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Rcx3Wo+53Qp3MO05MDEgMAEiSYA0hRoqhgk9alJEq2ZdmyksP1st8N
      T3q+b3k5XIfrJNlWsMRniQqUFSkqSxQTmANAgMjAzGAwsXs65+6T3o9udM8QcUgMBuScby0u
      Yqq7q3btU7vCrl11BNM0TSwsViniSgtgYbGSWAZgsaqxDMBiVWMZgMWqxjIAi1XNCQZQzqWY
      Tmbaf6uVAken5gAwtCo7XniBnbtepq7qVItZilX1/ElrYfEaMU2Dw4dHafo+zVcagMkTTzzJ
      E09sb6e88NR2fvH4k5iAVkownYONG4b54Y9+wuzhXRyZzZ9P+S0sXhPVzDQPfuc7HE2XAWOx
      AZimQUUTCMoahYaJaRrMFVWu6HZwNF1tf0+2u1Aka/vA4vXHrp27uPs338eeHTuBV0yBMkd3
      MZtrIJk1tj+/n0Z+honpFA0Bntr+DADHxg7x4gsvcMU1N55/6S0sXgOmafDyoaOkZuc4cnAv
      pgnygo95Ye8UH/rA3SiCwQMPPMiOqo1f/+0PEnVJzD3wACYwMLKerVdtBWBsCgzDQNd1RFFC
      EFamYhYWZ0M1O83w5hu4cusWxEqao+kKQicUwiSdzhAOhwFIp1OA0P47m07h9XvIl1TCAS8A
      tWKW/UeOIoo2Ltm0EZvlU7K4gKmW8hg2N267jFYvU2oICw3AwmL1YfXZFqsaywAsVjWWAVis
      aiwDuEBQKwVeeHEHxUq9nWYYxgpKtDqwFsEXCJmxlzhQCZIc3c3WzRdxbL7Igb27uP3225ma
      OEr/2kvojQVXWsw3HNYIcAEhSDKyJDI9M82hffsIxrrQUmNMZevk84WVFu8NiXzmr1icD5zB
      OLU9o2zachXV7AwbLvISDTmRPQF6SkcJBnwrLeIbknM6BbJmUxYXKsIpwhSWNAKYpkkqMYNg
      9+GUNEoNiPicTCcz9Pf2ANbCzeLCQxRPPdNf0ghgmgbFYpGpqWkkUUIGVBFiQTc1IUBPxHMu
      5LWwOG8seRGcmJ2mb2gYWbahyDKmKOFyODA0bTnks1jlGLU66tzcsuW/JAMwDZVGQyebyePz
      2NEUB4OxEOMzOeKxwHLJaLGKaRw5TOWpp5ct/yWtAUTJzqWbNrX/jrb+f7EvdC5lsljlFGsF
      ds3s4MaRW5a9LGsfwOKCwjANUpV59iX2oB3aD88/D4cPw+jospRn7QNYXFA8Pv84dz7yK6zX
      Rpj7hz/kf2zvgkgE1Ab86Z+e8/KsEcBiVWMZgMXrkvrhI2jz8685H8sALF43aMkk6swM1GrU
      du1CHR+H17jxuuSd4Gw2SzAYJDEziSsQQ9QqlFSBeMSKVLQ4x6xbB/WLQJLgoYeoP/IIJgK2
      556Fvn7I5eB734Vrr33VRSzJAAy1xsHRcbZuhJJqJzU+ik22IWOiRoLIViyQxWtEFETsogNZ
      kJE/8EHk2Echlcb8xv2YX/s6iCKmroPNBnYFUxThFO2uWC/itTcvcDgnsUCS4iQc8CLb/QiN
      w5SqdSJBJzYMjg9EViyQxZIwTRAEdENnf2IvN3TfwKF3HGLn9AvcPPImAGyBAEYkgtnbg4mA
      4XFjBoIYAT+G3U7p5z/HsWULcjhM9cUXcWzejGCz8fknP81/vfm/o8jKKYtfkgE0KkWq1Spz
      qSyiKLBu3TrMWoGSKmAHEAQkSXot6rBYBZTrJVyyE6FWI/uf3yTw/vdRE3UeOvxTLuvbQsAV
      5NZ1b1n8I68X0efHBKSXdiLEuxFzOaQnn8TI5hBKJaRwmNpDD+PIZJHueCuGaSCJ4il7f7BO
      hFmcJ0zTRBAEPvHyJ5gfnWJLXuf3P3g/iVvexEz6OT7+D5cQywboWTPM56783EnzKG/fjqnp
      eP6fT5LP5lByOZzf+y7Zg4dw37INZXCQ1L/8K4Hf+HXkYJBMJU3IFT6tXJYXyOK88JUX/j80
      Q+OfDv0TY6VR7j92f/uzolpiR3YHuUaOA8UDZ87M6QRFAYe9uUBegOe225A8zajkMzV+sHaC
      Lc4DP5n9CbuSOwnMRjHM1hrxssvguS/AN79F6O6Pc3vtSzjnRdaELjllPrbBwabb85e/hO8/
      CIODcPll2E0Tye8HwHHJxUuSzZoCWSw7ru+6uKZyGY8rz/H4mx6nkMkyFF/Dxb6Lqe3bh/3i
      i6moFT735Kf5v279xFnlmf/+gyiDgzgvv+w1yWaNABbLhqnrIIpsv3U7337ma/z1Vf/E1eGr
      ESOdmbfjkmaPbxNlevy9Z5236HQg2F5787VGAItzyvFGLzzxBJmnnsa/5XKk227jX5/6FB+7
      /g+RJdu5Lec1XkluLYItXjPFWoGaWgOg8OAPUKem4KabMFwuzK1bQZL42A3/9Zw1fgBBkl5z
      4wdrBLA4B/x434PEvF1sfWKM7PYncPm82P/8z6mNjmJfuxbBdu4a/rlmyZMoXdeRJBG1oSJI
      MiIGugk22VpOrEaqepW6UaeqV9He+27QDbjuWlAUHBcvzSOzEiyp1eqNKk88/xI3XnM5L7+8
      H8nuwC7o1FTYdPkmrD3g1cf7nnkfB469TEmo8Bnl87z1uuuwxbtWWqyzZsmxQN2xMILZ2dlT
      HF58DoMG4DBNdF1fJlEtLiRMmjPnv9v4dzyi/AK/K8ANwRuQYn4MuKBuCZFOs15YcixQNpNl
      zuvF4bBjc7iQRZVcQ6CbZsSdbE2F3vBsn9/O9w9/FwyT39r0Id678f04ZAcOm3OlRVsyS2qt
      isvLNddcA0BPvHtZBLI4v0znp+jx9S7Jo7Izt5NvTXwTBYUbh29hU++mM//oAuWkblBd19Ct
      sOZVwZef+/dOeMIqwWxN1Q3TPHEEME2DH93/OXouuYXhSzcStq+EiBZLwTAMTEwk8VW6IQwD
      s1jCaDSQHA7wes+tgBcYB/fsYDpbIR6OnHwE8PhD7D80hsuazp9ATa21b8Eu/PgnF8SN2C9O
      PceT448DkCwmKNSa7xLQDb0tn7lgRC/U8lS1Ko8mHyXbyPLc0Yfg3ntJf/JP4TvfwVRVKs8+
      e8ryborcxAeHf5t7Bu5ho3/jMtZseXA5XcxPT9BAOckawDTx913EGptBWQWn5dtcxGee+Gf+
      aNt/R/rBj6g+9DBerwduumlFZVJ1lYZep6JV2H70EWLeOH879ffIGZO0kuf+LV/A87MX8L7p
      Vn792J+gzVRx9Pr56nVf5SnlYa4euR3+6Hb4h3+E97wH45e/pPz4dlzBIObwCFoiga2vE6ez
      JbiFjVdtxDTN0562ulDJFiu86+53s3fPgRMNoKFqaKUseyoib710JcS7cLn6oavpTgX5ykP/
      yQv9XwSHA+JxAPIPfB//XXee8zJN00Q3dWTx1MNx0BXC3rDzpaNf4uFjP8e0waOlR1lXHWJC
      nqK++RIcw9difuyjfGPfPv6h/nU+fuUfATAcWosgCAiiSOQPfh9cLoRt27Dl8jA/j/Yv/0Kh
      VCH8jrfB3Xe3y7Sdw7CG84mhq3RFAvzkxz9l05XXn2gAU1PHmJqexhfuoa6B/Pqs57LwG4O/
      wb7yTm4ZvANh/RZsL+yEoSHI5ajt2IH/zbeB58xXxBuVCgCiy3XG79a1Gvc9fy8fuf4PMA0D
      U1XZXd3Pt8e+idf0cOPgNm7ougGAK7ma2/234VY8ZIU8j+7/Beu7L6bvf49RTxUQ3vteCIUY
      yA0htQzqfVd+oF3WcXlEp5PAPe+Fe++F734XhkbYzj5+OrIDp2bnkp5NvKvvXUtV3wVBtZhh
      x6692J1O6vXqibFApmlw3xc+Q7h3hFvf8nbcr78R7pyTLqcIucIIgsCOyefZ0re14zZ87DG4
      5RYSt76JLtOARx45Y36lxx5HEATcNy+eOmmpFFIggCDL6IbO3sJe7h39IvnJFDdHL+EDEyMU
      Dh/h8cvq/In2NcJ6kI9f/Yf8zvDvnLQcVVeRRfk1BY1p6TSlhx/ha1sS/NkL/y/dRoxbLn4L
      n97y6Ved50rz8jMPs3MsxRVbrz5xBNi781n88bXc/rY7UF6xRDZNk1QqRTjoY3T0KLLTS8Rn
      p9SA7tiZj5+9Hvlvu/4b6fEZvP0R/nHLP3JF/1WLvxCJwF13gU2BDeubUxZDR05n0J98klqh
      gHjVZWQHolTqZfruewAe+DEmJoV//ht2+Ct0+3tZ8x/fp7DvEB6Xiyd/52qeKY7R2z/MoGuQ
      CUUllqhhfvvbmJLMXa6ruP5jzzCVn+KKvq2nlP1cTFPkcBj/3f8FRj/zmvO6EKgV5hmbK3Dl
      1ddx6dr+E0eAX/z4e2jVAg3/Om7fdj3OBTrUG1VeeHk/11x5BaauMnp0EkPTkIH+DevfkPcC
      df+gm0tLa9ntOMDUndMo4smHxPRnP0fhA2/ly2NfojCT5vJElff96S8o9fXzb5fs48t3hPAb
      Hn5jj8yH940AcOcdz5H3BclJBb6ZfDdDB1U8XVHesuYrCHqQkeENfPGaeyk1injtPrR0muJP
      f0bw199/PlUAwK7cLn4w+n3y+Qzv2HQXt0RvOe8yvBaOj4IzB59jx2SD7OwY1297y4kGUMhl
      qNZVAMLRLuRXjAKHDh9i/br1zB4bwxPrJzF5DBsm3evWYjPN1/W9QLqhIwqtQxa6DpLENb+8
      hngmyKQvybO3P4tNOEWvapo8n3uBjz33UXqLUbox+Ned11DO5wm89z3MXb6Gmfw0V/RdhZ5K
      gWkiRaP8ZP+DDIfWcFHXpdRefBFl/XpEr5evvvgf/Nqmd+NWPK8UEqSVOcYxkRnn4Px+bt/w
      9hUp/9UiLjg4ozVqpLN5AJxu79LOAzQqRQ6MjhOL92GXBYLBIOnkLKUGDPa9/kMjfrT3+6yL
      bmB97CJy938D95tuxffEEFdVN/OMsoPS3eVTjgAAJa3E3uxefrbrQX792t9hxDmEnsshh089
      PWzoDWRRRhQWN2rD0BFf7cbWMmKaBoLwxjlHteRYoM2bNi9KC8e6eaPM/ht6nYZeB1qeGk0j
      qASx1W0ElDPffeqRPVwduZqRa4eIepohwadr/ACKdHKDuhAbP/CGavxgHYo/OU89BWNj8Itf
      MPObk2w/+jjXDt2ITTzzolIQhHbjt7jwWfUGMJEZRxAEnig+xdPJ7TxdeZYPe99KOBBo3jsj
      CNy05taVFtNimVjVBvB0+mmeGn0cURS559LfwJmTWRfdwLruy9B6tyL5fHCalyxbvP5Z1Qbw
      Nwf+hj3HXsLAYG3PRQRdIVw2NwByyHrz5WpgVRvAK7ll7ZtXWgSL88yqvhZlojzB9tFHkUSR
      d2y4E5/Nt9IiWZxnVvUIMOgeZNzZiyRKVuNfpSz5HWHJ+Xm6olEyqTlUwYFT0ik1BHq63ii7
      ARariSW/I2xicppIyMuBQ+MMrV3HXDrXfEdYVxjZNC+IE1JLQRJlREF4XYdwWJweQRDO3TvC
      Aj43mDr+UJxiNoUkKUjtW2J43RnA1QPXAa8/uS3OntOFgy/5XqB6rc58rkHQIyLYY9hpUFIF
      lGZJF9w7wnRDP+GwuGmaYJoIonjByWtxfnldeIFm89OE3BHs+RLll17CedFFiPH4Ca/HWUhe
      zfPjqR8xPnmYt236VbYEt7Q/qx8+gjo5iedN1g7vaud14QX6xcGfsG3tbQy+5b9Q9QVwjB6G
      Z59FszuQQsGTDnFTlSk+9NyHuFy7hFlvin8J/kv7M6NcRi8Wz2cVLC5QLlgDKNWLKLKdglag
      olfJNDL0vfg8fObz8P73w9//H7JT04SHhxD+7M9Om9ejyUf5kxf+GFfdzmVjBd75uAaaBkOD
      zXdVWaxaLtgp0A/3fo/+wBB3vfQuQjkPY/IxXnrnbnrr3ua52cFB5oeGCWfSiHv3ok5PI/f0
      tEeDTCPDfUe+zPjEId60+Q78hpedE8/zvidz+P/5SzQCQfx/89dw57m/ycHi9cOyjgC6ofPM
      0Se4YWQbAIZpnHDw42T8rz3/i+2HHqYmN6gJNZxyjJASQhKkE2N0NA0SCTKf/3dif/gHmKEQ
      1Z07CW3dym8N/RbfyNzHnb13cix7lAlllPjb3kZV80CpDJs3n1wAi1XDshqAZmg8Mf4YzqCX
      e0fvxZWT2TCyid+OvpfG4cM4r7hi0ferjQoIAjPVGRK1JHmxwFO/8gzb9/6SbWtvo8/Vd2Ih
      pVLz6o7kPPz7v2Pefz+lgSFckoD/we/z3i2/2ayoaGveXrx5M7a+PsRcDoaHl7P6Fq8Dls0A
      8mqe6x+6nqF8N194+j5qapWLKiPkiwf5rbRA9cgoznodrmv64b828TUeGX0IwYSRnrVs2nAx
      NoedsBLmqoFrCbujiwt4+GH42tfh85+DSy6Bv/wr+MAHYPduQIS+HkRBJORu7lD3+Ht51+b3
      NisdClnRnhbAMhiAaZpM5Y7hdns5WDxAVPNxeeByvnTlf/CFp/+NP77i91B37YZsFgYG2r97
      dP5RHko8hITIJ0du5EMXf6j9mS9+kvsn160j8LGPIsRinbSeHrjvPvjnT8H//B8n/OT1epuZ
      xfKxpNMepmkyl0iAaTIxdoTpuXkKmXlmEqnOdzC57/l7cUkuPrXl01zqv5SPjHykk4nPh3TF
      FhzbboZQCHXfPqpPPgXV6pKFt8XjCK0DK/67726+NlNRCNxzz5LzslidLDkW6Nj0LF2REHPJ
      JGsuijKXTGLDRO2KUNdKvOPxdxDJerj7qbv59rXf5lMTf8ebY2/GMHXeccldzZgbpxPH1q0Y
      DzyA9slPUvcH2Pp2heK114AJw67hJcfmKOvXtcMZ5P4+K7bHos25jQXyukAU2XLFVRw6dBC7
      3YEImIAsyGyLbmM6N8ba8KWICPT4+5rvE0NkTXjd4pibO+/EXLceDh7kd3/tLt5dy2FiEnAE
      rdgci3PG6WKBlnwv0KGxCcKxLurFPE5/GMWsU1QFBnqaNyEYpsHf/fLP+b/f/GdnladeKmGU
      y9i6rJsULM4/y7IRli6nCLsj5zpbC4tzzgW7E2xhcT6w7vywWNVYBmCxqlkRA6jXKuTzBQyj
      M/syTZNyqUCxVGHhpMw0dPL5HNVaY1EeuqaSy+VoqIvfSK426uRyeVR9sRu0WimTLxQxzMVl
      Fgt5SpUq53oiaJomlXKJQrG0uD6mSaVcPEm6QSGfp1KtL8qnXquSzxfQT9BVkWKpfELezfSz
      0+G5oKnDwgk6NHSNfC5HraEu+r6m1snlcqiavii9Ua+Ry+UXvZ731Do8rqvaK2Q5uQ5Ph/Rn
      f3aGWOJXiaHV2fPyXo6MjqKZIsFA89YFtVbkwOFJErPTFCs1opFmSEJq+iipYpmjY+PogtI8
      egkcObifQj7DsekE3mAYh615CGb/3pfJzCdJZnNEol1IAoDG3pf3M59Mks0XiMaiCEA1N8/Y
      TJrZyaOU6xqRUPOi2+mjo5SrRY4cmUC0e/F5HE1ZZicZHz/CodFpPIEwTnvTWzx++AAHDhwk
      XSgTjUYQBQHQ2bNrN4dGR6lrJuFgAIBicorJbIXpo6PUNAgF/QAUEpNM5ypMjY9S10VCLb2M
      Hz5ItZJjdGwGhzeI22FDa5Q5cHCcRGKGYqlKNNIM68jMTJAslJkYG0dDJuj3dHRYKDHxCh2O
      HjxAMZ9hYmqhDg0O7t3DwcNHKNVUIuEQQuv57N13mCNHDmOKNgK+5itT1WqBvQda6ZJCwNcs
      c+boKKVqoaVDT1uHB/fvJTOfYnY+TSgWQxabrsi9e3YzPz9PJl+gKxqj6aFUeXn3Aebnk+QK
      JaLRCMJpdHj0yEFq1TyHj0yjuIN4Wi+xGD/S0aG9pcMzsWwjgGnomIKIPxRFomPVkmzHboNI
      vLf98AFcXh9qvcHQyBpcjs6NyV6vF0OwMzLUjyR2/Lketxu7J0BvPEYnVcLjtuMJhIhHO14o
      m9OFaKp09Q0S8Lo7eXi91Oo669aPYLd1TpepqoZstzPQH6dc7OxQa7qOw+Em5HWhtXskE8MA
      nz+EInUkcXh8mI0avYNr8Lodi9KNRp2+oTV4XZ2XMHt9HuqayLp1g8it+/9FScGuiIRjPYRb
      Dx/A6fWhNRoMjIzgXqArl9eH2lAZHFmDa8HD93g96ILCyHA/UtsnbqIbJm6PH7fd1n5ChqYj
      SCKhSBz0Tu9taBqCJBGKdoPWGUk8vqYO164fwW7rbCt5vR4kh5uBvu5FjcztcuPxh+iOLvQS
      SrhdNvzhKNFwJ0bLuVCHro4OvT4vtYbA+g3DbV01y/RSV5s6tIln91qoZRsBBFEmFAwQDgWp
      VCr4/c3GbpoGhm6g2GSS8xm6Ys0gN9MwQJAQBZVcrkok3OxJDUPHptgp59KgePA4mw/c0HXs
      djvp5AzecDfH26+m6TgcdhKzSSLxruYmnWlimGCTRFLpHLGW8g3DQBBlMGvk8xrhULO3c3l8
      +HxBvB4b1bKGz9d8eZzfHyQSjWCUK8g+HzZBAASCoRDhSIhKuVNPwzQwEZBFk0y22B7pTKOZ
      LokGmWxpUbpkU2jUCtRVGb/PCZjomoGiyCSSabq6om25EUREQSOXrRKJBNq6baefQoem4m7p
      UCAQDBGJhKmXy7j9fkRAsikE/H5CQT/VShVfqz6SYj9p+ql0aOg6doed3OwcjkgUR6uh6rqG
      3W5ndm6Orq54awQw0VQdh11hbi5FV6tTM8zmZQtNHRbaI6DR0pXWKFKpiAQDrkU6VOsFqg2Z
      gM95xna6jCNAg507dzIzM8NcshMrJACZXB6n04myoMfQtRqlqobT6Vpk1cV8FkG243Q4WLih
      l8lksDucOBx2Ftp6JpvF4XTisHd6RgGTbK6I0+nEJnfKVKtFarqI0+lEWnAJ7vzUKAfHjjEz
      M02x1JlnHti7m5nZWSaPTaG1J6UmL+14kdmZGWbmkgvK1MkVKjidzkX1wdTIF6stWTrplUIW
      TbDhcjpaU6tWfVq6siudHt3U6xQrjabcC/I21HpLh84TdIis4HQ6F+W9e9dOZmdnmJ6ea48A
      eqPCzpd2MzMzQzKV6TyfepmdL73cTE9nOzqslajpAk6na9EInc1ksNkdOJ2vfG4nPh8QyOay
      zXraO/UU0ckVyq36dEboWimHiq313DqZV4pNHb6ynqdj2QxAEBX6euNomsbwyMjCT7BJAolE
      Ao+/89IJUbKhNSok5uYJxTrDo8PhJJ9Jka9pBLwdi3Y67KSSCXTJjWNBQIfTbiOZSCC73Cw8
      Mi8KBsnEHL5gZ4iVFAf1cp652QzR7s7FXpHuPpwyGDgYGupEmw4MDqKpKpHBQTxtxYsMDPSh
      ahrDaxbWUwRDJZFIEIh0QrkFQQSjQSKRXJSuOFyU8xnmM2Ui0c50R2npyu0LLNCtjK7WTtCV
      KMkn16HTSSGTJl9VF+hQYHCgH1XT6B0Z5nizkxQXPV1hNF1neKRzXkKyu+mJBdF0nZEF6bLN
      Tr1cYG42TbS7U6bL5SQ9n6QqyrjlzpNwtJ6P4vQu6rjsNolEIonTs/CGPgEMjeQrdGizu6gU
      MiTnC0S7OnpR7C0dpktEYn7OhmUzAK1epFgTWDMyzNz0VCe9Uaaui0QiYXLZTg+TT6Vw+UME
      Ax4y6Vw7PZ3JEoqEsaFRqnbmpLlCkXA0ilopoLaXGDr5Qo1oNEqlkG/fVVQr5sHmIhwOk82k
      23lkUmn8oTABr510pnNIfmLsKL2Dw3QHFKYShXb65NQsa9aupZ7P0mivARrMZ6qsXbOGxEyn
      nuV0Cps3QDgUIJPqlFlMp7B5g4SD/kXp6XSGUDiMxy6QLTTXHbpao6pCNBImv0BXhXQKpy9I
      KOAls6A3zqfTuPxBggEP6YU6TDd1qCzSocZcMsfaNWvIJTsjQDWbRJU9jAwNMD3VqU8lPYdm
      9zMyNMDU1ORiHQZDBHx20umOrrLZPJFIFLNWpbHAI5cvlohGo5QLOTqOHZViSSUaDVPIdepT
      auswuEhXqVSaUDiM1ymRyVVOqsNcvpN+OpbNAGS7B1kvcXh0nK6e3kXpol6hXFXpjnfif0Jd
      XWTmpkF2Egl62+mxaIjZ2ST+cBSnrSNu0OdmPpUlFo/TGQUlfG6ZdK5IvLvzzjKnP0SjmKam
      mnR3dXr0WLyLuZlpZJefkLezyOob6OPIwQPMZOr0dnV6kngsxP79B7D5AijtMhU8DoNDh48Q
      6+7U0xuLU0rOoJky8QWvkPXF4hQTM2jY6Ip2RqOurggzM7O4/BG8rSFNUlzYqFOsNuju7ugq
      EIuTTcxgyg6ioY58wVgXmbkZkJ1EF+kwzOxsEl84hrP97luZoM/OgYOH8Ue72g3BGYii5pOM
      jk/Q09c5gecKdVHPzjI6PkFvbyc9Gu9ibmYG2ekntGDOHQn7mU2miHR1LVh4g9/tIJVtPp9O
      qg2X3SRXrNK94Lkd16FqSsRjHV3F4zGmp2dx+sL4XJ0pU1dXtKND59nFeS7fCFArUm0IIEjk
      5jtz40Ylj90bpVTIkZhLtNOTUzP0DQ2QzWdJzHXWDIlUnpjfQTadJl/q+HcLlQaKoJJKzlFv
      u5Q1qqqMWS+TnEtwPLmUShDo7ieXzZKYm2vnMTM9x2BfF/lijsRsp4ednprB41TwhdxMHe3I
      mEimETERqxVKbb98nXxBxTAFCumO3JmpY8RH1pLJZBfVMzM1SffICJlslsSCNcP0XJq+mJ9s
      IUMqXWzrUHKGKOdzi747PzVF79BgK4/5jg6np5s6zL1ShzliAQfZdIpc8fiaRiOTLQMm9VyO
      4+NCJTePLtsRZAfpudl2HuVMAtPmRJQdpBakz0zPMdgfJ/cKHaZzZfx2gfRcksqCEaCimtAo
      kUgmFowAdTTc1Eo5komFujpGfM1aMpnMIh1Ozc4zGA+QK2aZT3ZGnem5FP0xP7lChlSqxNmw
      bF4gEwFRVgh57WRKNWItb4euGximQG88QkMz8bf8zAgGos2NzyEj2Z24XQ7AQG00CMd7MRo1
      vP4Aiixh6BoNzaCvv59atUYgEEAUQNd0NMOgv7+Paq1OIOBHAEwBDEMkHvWhIRYRLIQAACAA
      SURBVOFruUINXcXuCWMXDOweL662h0kjHO+jlJ5DdvrweZseGVU3GRroY3Jyhmh3HJsgYOgg
      SCJdYS/z2RJdx+fekohhSET9TkxJwetxtdIFTGyEfQ5MWcHrdgEmutrAF+lGVOu4/X4citzU
      FdDXHaOu6R1diSaC5CTgsiEqDjxu55l12NXSYaClQ8PEpPkcZpIZYvEYIiAIINpceO1QqulE
      ws11miCAqLjx2AxKDYNIqOV5MjTsnhCORTo0qNdUuvsHaNQq+AMBZFFA1xpousDAQB/Vao2A
      P4AggNrQMAUY6OuhUlcJ+H3N0eG4DgMuTPG4Dk0MtYEn3I2oNXD5/Tjstna6N9KNoHV0eCaW
      0QtkUK+WyJXqjAz1t9Ntih3BqDObmMemyO2dP6fLSzmfIpMvIsti6zyAgN/nZW56irohgNHs
      0wVRwuNUmJqcRpDtaFqz/xIlGaciMjk9g82uoLV2iW12J3qjTGI+jU2W2zvQHp+fXGqOXLGG
      JAntMwiSLJGcnUZyBOmOH19kmYimzuT0LH1r1+AQjtdTR23USOUqrBkZbNdTcbhoVPLMZ3LI
      stzO2+50Uy/nSGVy2GSpne7z+5mfnaJU1xEFs60r0WgwM5dEsdnQWj2pw+WhUsiQzhWQF+Sx
      FB1iGhhag9n5LMNrh5Fa3bFhQrWUo1TTGBzsTHUMU6BazFJpGAwOdKZ6bq9vgQ5ZUKaLqWPH
      MGQbhnr8+dhwKiLHJmdQFAVVaz4f2aYgCzqTM3PYlU497cd1mM4u0uFxXRWraltXAN7jOqzp
      i9JPx/KtARQHiixSyGeZnZ0lX2wuSgRRJBAME4/HKeUy7e35crGE1+skXyhQKBRboQwCc7Mz
      SIqT3p5uGvUaBs0DDtlMCmQ7DkmjUGouGgXBJJvOUkjPM5/JU621hntDJZ3OUKlWyeWz1BrN
      MtValVKlRr1Wplwqo7d0FghFGRgYIOCV2b/ncMvlKeILhPC57Uwem2AumcIEJJuIacr09sQp
      F7Jk882hV5RkwpEo8XicTHKOeqP5sPV6hflMgWqlQjabpa5qgEC5UsNhEykW8hSL5db0zSSf
      L1Cv1ylXytTqzSlgo1IiWygSi3eTm5+n0QorqFXKKIqNUrmyIBxEoJjPUa5UyOeyFEtljJZ8
      Pr8fpywwNTlFKttcNNtsCpFolFopx9jYOMVKU4eKw4lpGBhqhdHRcUqVpiyVYoFCuUZPX4z5
      6SR6ywDyuSwNtcLUxFwzTGLBc6tUKmSyOaqtUAZBECjk8zTqDUrlCrVWulavkMrmCcd6KGVT
      LR0KlMpVbBJUyyXy+VJLVwLlQp5SuUIxnyVfKLE42OLkLKMXqEC+amKTJGrVGn5va7NCb7Bz
      x05mZ2fJFWt4Wjt8xUya/QeOsmb9CA3VQGm5znRDwueSGR8bx+nxtgVu6AJOsc745DRu73HX
      mYhil8GAeF8fPm9zu75WzCPaZEoVHV3TcTmaO7DZdBpfMETA60A15fZ2/ezEEfbsP8jk1CSi
      4kZuLeLGx8aYSWTw2WT80XBrEVcnnylzdGyMuiG1wxLUSo4du/YxOztLXTNbwzQU02m6B7qw
      u8OYuoGj5d9Pzc1ybC7LcG8IXVCQaHqBaipEwiFq1ToeV3OqUy4U6O4f4OjYIeoa7R3YRrXM
      +PhR7E4HiLa2DnP5IrViAUWxITvcLR0ajB48wNT0NILibk9paoUsE2Nj2INxTMNo78CW0rOY
      kkiqYCALJp7WLnaxUGKgr5sjRw6jCwpyaz/FblcQRAiEYkSC/vaCt1ypUSjkwTDwtp4PqJTK
      KpFIiFq1hqc1Xazm88QGhpkcP0y5rrd1WC7mODqdxKkIyI6OuzubzaOWizjcDpAcnM21x8t2
      LYphiOTTM/QMriXg6XgHRNnBlVuvRJZlXE5XO71v3XpijQY2SSDo87TTB4cGUewKAzZbM4Cq
      teXrcSqIziDDgzILnEOIokSkpw9ZV5u9DuAKRGhMJlkzPIimdRZk0a4uDh+dQqvX2LBpwTTN
      rhByeumOeikVj2/768giuIJhvC47zpZRqHUD2SnTPzzIgkgI7O4QW7f4kWWJ+QUbgeH+YXRT
      IOKF+WTnBxsuvZRGQwWjjrd1e8VxL1Cppi3ymAVjMcanEqxZs45MtrPY84XCONIFAv4gNrHz
      aKNhP2mnj4BLxqW0OhZNI9bTT71aJtwdbTdQQXGgaQ1y88lX7AO4SIweoaenC5e345HpGxrG
      RGDd8AipTCdEItLVi78RIpPKUzdMHC3lrF27FkSJ+VRmsRfIYVIo1+nujnfq0xXn0OgUa9et
      J5XquEcjkTDFqkYg2o0odJp5VyzMdNZF0OdEOYs4IFhGA7C7vFx+2WWk0mlSqRKCJON22tHV
      Kjt37iEQDDRDAVqhEPn5acZm83hdIrW6QjTaXHxNjh9CFe3UC1miw5fgbi1UC+UazsYs1Xod
      Z7CH5nPVKJRUZLFKtmHiCwUQaXqBQj19zM0lEaEdfjA9M4ffLmDr7mNqMsX6NU3lR7r6mwF4
      x6aRZDturxNRkFh38cWk55PkCwVU3SQSDmKz+1g7rDCfnENVVUKROF63g1oxxe7DMwR9TkoV
      rV3PWjHNntE5Al475apBrBXecOzIQcqGhKCWsPsGCPicaLUisjNEOZ+llBcItXrp+ekZgpEY
      48emQBPparlZk9PTdPf3ksmkMVUJX2s0ms+WCPlc5PIFNMmDy2FDku3EYhFSKcgmZ9CDEYI+
      D06Pn/UbNpBKpUknE0jxbpx2Gy5fiMs3X0oqnaZcyOJxO3EoMvMzEySKDZw2DVXzE483n9uB
      PbsQFRf5uQRrI5F2KMTBA/tx+4LMJefp6+trj6Ka6UYvZikXJMKthXdmapJAd5zDo0eRMInH
      m7qamknSFwuQyaUxNS/elgt7dj5LPOQjWy4iliW8no5r+1Qs4wigkc5kEUSJfCFPX1/TUlVV
      JxiJMDQ4SLxc7vxAkolEIvT3RCi1A9AMFIeTYDCOd7APrSWuoWuIgkC0d4B0MoG91QnoqoEg
      GvQNDpFMzLeHQMnpop4uMTTQQ2bBBonDbsPm6SLotuFxdbbmpyfGyJaqDK8bZO5Yx812+MA+
      dNFBxKFgawfVqezZvZdAVzeCTtvzoJkS0UiYwYFeysVOL62ZEpFImMH+ngXpJnanA4crTNRv
      53iUr2GK6EaDoaEBkul8R26vm1KlQU80RHlBhLPD46JS1egOB6mox4dFA0USUXwR/GRwtxuF
      zv49e6iqOjbFSXdrr6ZeyrLv4DiGIOD2+LC1eu5aIc2+wxMYgoDH42tPF2VFIRzy09PlXzRa
      2u0uwr39DPR0I7ZCPnS1jtsXon9wkHi8qz0CqHUTQdIZHBghsWC0tPt95LNFBntj5NsVNXEp
      ErrixQ+IDm873alIGHY/fgRkV2cWcTqWzQ2KaTAzO0c4HKZWqxFtBaDJNgW30858MkmpXMbm
      cKHIEg6nG0nQSSSSVGsNPB4Poiji8wWolfOkszlUzcTjcSGKIoGAn1wmQ0PVMBBxOe2IkkzA
      7yWTSaNqKoKk4LAr2OxOXHaZdDqDqqo4XR5kScTnD2A0qiTTuebc0+dBFAQqpRLdA4NMHT0M
      kpdIK8CrVK7SH49w4MAo8aEB7K1pUL2h43UITCUyDPT3AKDYHdhtIom5OSq1Bi63G0kUsdud
      2GWBRGKOSr2Bu5Xu9vrRakWSqSyqpuPxupFtdrwuB+lMBl3XsNmb8VNOlxdZ0Mnm8miajsvj
      QRIFXG4vEhqZXAFdN3C73U1dBYNUijnK9Qa6ZuD2uBAwqTUMYtEIkmASjDRDkLVaBZs/RNAT
      QNdqhMPN0UWrVVAC4RPSXW4vgl5jLjlPQ9Nwez2IgkggGKCYy5ArFNH1ZmiEKMkEfB4y6RSl
      UglTtOG0K0iyDb/XTTqVwtA1JJsDuyJjd7hx2ATSmQyabrR16AuEUCtF8qUqhmHg9noQEPAF
      gjQqRQqlKoZu4Pa6F4VbnIxlGwEEUWbDhg1AM0z1OIauksnkECWJQiZPX1+zd6hVSxSKFWw2
      kVyu0Q6gKuSz1FUdrVpGdnVih7KZNIYJpXyGUNdxt5xBJp3GRCCfKRDvbc7rdbVGJpdHkm3k
      8rl271UpFShV6yiKST6vtZUV72veWLd+w+Kr04eGhgC45ubrF6RKDA03vx+Jd9yDxfkZRpNZ
      enoGKGfT7d3qfHKG8fksvb0DlDLpdj0nRpsLvcHBbtIZDRPQG2X27j1EON6DqavtkO3M3CST
      6QL9A4Pkkpm2YyA9O8l0pkD/4CDZRKad99iRg9Q0gd5YkKrZjvphcLCpn+PTMwCHL8zxWXg0
      1tG3wx/BcZL02clxkuksBgKh2GBbh4cP7KNQqmIKMhdv7uzu7t2zi5pqItud9LQjBDT27HqZ
      htl08fb0NptlKT3LwckkCAI+r7+tw2Njh8kVChimQKxvXTvvidHD5ApFTATiA2f30sbzfiJM
      EAQKxRIejweHw47cis40tQZV1cDj8WBXlHZ0ZrmYR3a48Hg8KDa5reBCvoDL48HtdmGTjz9U
      gXy+gMfjwe1yIre8I4IAxVK1mbddQW55R7R6GdWU2+lnG0F4Nkg2me6+EWr5BOW61o5mlG0S
      Pf0jVLJzVBp6J12xs3bdGo6NjyHIcmtTSiLcFccuNEjlS21dSbJM/+Ba8vNT1DWjHREqyTL9
      Q2vJJqao62Zbhza7k7UjA0wcnUCU5TP2ikvBFGQGB4ZYs3YAENo6tLt9DA0N0xMLIUmdMv2h
      GMPDQwS9bmS5s1ANxXoYGRrC67K3n5tpGAytX8dA7xCSQFtXgmxnsHeQNWv7muHfrTxEm4Oh
      vkFGRnoB8awat3UrhMWqxjoUb7GqsQzAYlVjGYDFqsYyAItVjWUAFquaRfsApqmz68UX0RCw
      u0NsuniE8YN7SRaqCJKdq7ZsRlcrPP/8TkRJpHfkIvpiQWYmjjCVyGKaJpu3bGXv7h1s3bp1
      pepkYXFy9AZf+9o3uOt9v4nbJrDn+e2LR4A9zzyGt/8itm69ikvWD6FXs+wZT3PNVVfR627w
      woFpnnr0ETZsuZqrr7maF595Aq2WZ8f+Sa66+iquvnordllgYmJipapoYXFqDB30Krv3jYFp
      MD45u9gAxhJFRrq8jB/ezy8fe4rC3FF83c2IwK7htaSnjpKpaoRcNgRBwikJZJMTuGODFDNJ
      Hn3oZyQKZ38tnYXF+SbQvYZCYpxKdgZPpG+xAYRcMtmqzvC6i1GrRdyhGJVs88xpJZPA4Q9j
      F6Ghm2Ca1HUDXzBGPZ/CF4rRH3FRqGonLdjC4oJAlPApJs++dJCNGy9evAa47uabePjxRwmH
      A9jdfmy+XiK2Izz7/PMUCyVuuuUWGjkfjz36GD6XwsC6S7F7uoi5jvDMs89RLVS5ZI0NRdB5
      8cUX8YW6WDd8knf7WlisBIKAy+lk08U9fPPnO7jZbbNCISxWN5Yb1GJVYxmAxarGMgCLVY1l
      ABarGssALiAMrcHPfvwjnn5uR/uy2sT05IKrHy3ONct2JNLiVWDqGLILezXJvkNj7H/hcRTB
      pPfymxjb+RSO8AC/+tZbVlrKNxSWAVxgFLIpBJcDpXGIcNiHy+nBZbdRbcDG1tlji3OHtQ9w
      AWGaJtl0CofHhyKaVGoN3C4npWodGR1TVDoX4VqcE5bNAHRdR5LO5nI6C4uVw1oEW6xqLAOw
      WNVYi2CL80ailuCB6QcgqyIEFX535HcRhZXtg601gMV54+n001z/8PXcWr+OR5VnqN9dp779
      aRwbNyIveEH2+cSaAlksO5qusnfu5ZN+ph47hp7PnfSz84FlABbLSrqeZmd6Jw/u/y7HKscW
      fzgwAJ/7HNxxBzzxxIrIZxmAxbJy7/i9bHtkGw/OPMg9z9yz+MO5OSiXIZWC+socpbUMwGJV
      YxmAxXnjyuCVzP7KLDdFbmbqnVPIwso7IS0DsDhv2AQbcUecK3q3EnfGz+k17a+WlTdBi1XH
      nZvuXmkR2lgjgMUFg1GtoiXnz2uZlgFYnJSG3nn7XmNiAi2RPPeFfP3r8M53wl//NWzcSP3Q
      YcpPPw00I2MLP/7Ja8q+oZ3Zs7RkA6hUKoBJMZ9tvmW9WqZQqmDoKunMym1oWJxb7nvuixRr
      Bfjwh6n/2rto3HYbfOIT6IUCpccfP+Pva2qNUr14+i+9+924P/y72D7wAehqvQfZNOFb34J7
      7qH65fvgnntOn8dJKGkluh7s4le+dwcD3+/n5fzJN+FgiWsAvVHlxV0vc+M1V1Gt1UlOzSKL
      YBogKxIOm4Qm2OkKWjHrr3eqagXd1KFQgGIRajUoFjFKJRqHDsPNNwNQ/Pkv8Lz5NgSx05f+
      7YG/5aXJF0AHJeTiA0MfoDpXYGPfFSeUowwOnlj43r3wzW/CLW+Cxx+Fb3zjrGQ2TZNyo4Qp
      QrKepFjvZ96cRzNOfVvhkgxAUpx0RYIgCJSLebr7+sil0tgxKAAD0SDzhRq6rmAYBtZZm9cv
      hmmi6zraZz+L8cijCG43Wi6L/of/FUOS0Ha8CB/7GOWHH8EZi8Ill0DLCNK1NOlaBskQeWfg
      Fj44+EFeOPYMNwxvQ9NO0Rj/4i8w9u7DFAS0YgFuvBEz4Ee78UY41W8WMFGZ4IczP2T0yD4u
      Xn85M2+f4avP3ct/bP4qw76RU/5uSQbQqBQpForMJuYoFKtIzgouRaCoyvT6nRyZSLJuwwak
      1suVrWC41x9HSke4/uHr2Vhez//J/jP/dtVn+JU73gqShPjFL2L+4ueI6zcgf+ub8NnPImy7
      Fenv/gYhm0Wt1ZDDYfaX9nOgdAA7ChO1Cdx2N9vW3Xb6gv/4j1F370aYnEJ+aSfm3/89wi1v
      Qn7iCZDP3EwPlA/wJ7v/hJsbV/Mfe7/Ox9d/HIfkJObsQpGUU/5uSQaguLxceeWVAPTEO+9+
      Pf4vfzi2lOwsLkB0U2e+Pk/dGCDdSFMzaohud/PDTZvg/e+Hah3WroH//M9Fvy0++AO873zn
      qys4EAB/ADJZOF7ecfbuRZNlZE2D4WFwuV5dGSfB2gewOHu2bUPauhXHgQMQj0M4DIUifPzj
      8OUvY46NQz7HV+/8S57vnqNcL3Hb+reedfaC3Y5ot8NVV8Hv/V4z749+FDZuJLPtVmKPPdIM
      mrvhhrPK7/rhm3Ar7tN+xzIAiyUhut24WrMA/u3fkD71afiD34dsFr5+P9x2G/6BNdwsXYRh
      mjhkx+kzXIB9w3rs69aCJMHb3w5/+VfwyU/AZz+LKZ5+3/iKwBV8/dqv88zux/ijLf8TgCv7
      rz5jmZYBWLwmQh//GIIkQSQCDgeEgmC3c+pZ96kRBKHZ+JeAXiyiJefpXjPCe/rfwy3BbXR5
      42f9e8sALNo0tAY9jh6+dd23qGfL2P1urglfc9rfiEqnqUt+P4Lt1TT9k2PrO/O7JbTZWaov
      7sC+ZgRBEJbU+ME6EvmGxTTNZo96FjyUeIjPjX4Of8qBuz/Ep7d8+tWVqesgimdd7hnzMwwE
      04TLLycxNEzX0XG47z6Miy9GUBSEv/or6l/6MtVolMDwENx//5LLsEIh3oA0tDrf2PGV9t/a
      /Pxp92SOlo/y3anvMlYY42dzP3vV5QqSdM4aP9DcXJMkePnl5sL45ZdhdJTin/8F9b/9W9i2
      Db5xP3zkI/D5z7+qMqwp0BsQ3dCZzk9CowEHD5L9zncJv+PtCJddBsq5m6KsCN//PkzPQKUC
      sRjcdBM4neDzvarsrBHgDUaukWNvYS8FrcD+w4/B5s3w0ENN1+H09EqL99r5ylfg938f7v0i
      fOhDrzk7ywDeIJiGgamq/Hjux1z38PU8mnyU2x+/faXFWn4Eofnfq+TEKZBpcvTIflyhPsIh
      H9KFcGzH4ow0jhyhfuAgXL4gMRKG7/w7PPlU01cfi6EmEoguF5LXu2KyvhrkaLTzx4JGrwwP
      I8eWFoFQK+WYSReJhIInGoBpGux+5iFcPZex8bptxM/drrPFMmKqKmajsTjR6YR3vgv/1q0I
      fX1w8CDVxx7HFu/CuW0bBIMrI+yrIPSRD7f/7XnLmxHtzQ02QZaR/P4l5bVn7z6qaoPErPsk
      UyBBpGftZkwTQme/iWdxAaMMDDQ9Km9/O+anP9UMXfjBD1ZarCUhLHCpS14vgmJ71Xn1dneh
      aQbhrp6TGIBpks4VkRoFyuqrLuOCxFRVTMM48xdfb0xNwegYJBLcVBnka9d8latCV/GFrV9Y
      ackuSObnE3i9PtKp1IkGcGT0CIJWJVGso7xi/q+rNV58aTemaTC6byeZssb44YMcHj9GJjHD
      nj17qaoXRgOr6TV25Xbxg/3f46XsTjRDo/CDH9IYP7rSop17UimYnYFslv6iwl29v8bWrqu5
      I37HaX82m5/mZwd+REgJsTmwGa/s5SLfRedJ6JWhnJ2j0jDZv28/bp/vxJ1gVW3w/PMvcMUV
      V6DYHSyMQTINg0NHjrB+3TqKiTFKzgHM/BRzyRzeoJ+h7iCJnElPlx/DMM7ppshSmahM8MHn
      Pkgk7SUdKvHAvrfB0XkcgQDKPe+FNWtWTLZzwcHiQZ4be4q+8ACbY5fjGU3SOHAQ76/ddeof
      FQqUfvozbH19PNaf5sXMLjLpJHds/FVui91GqVHCo3jOXyXOE6IoIrYO6xiGzoHdOwkPrifk
      cZ24CBYxmJk4Qiab49a3vB33gn0TtVZmfj6JLxAkN5uk7pIJKwaSzYbHIXHwyCTD6y9th0Cs
      ZChEzazxRPYJblav4ansC5h/uh1peDPSzAzy5k2wYcOKyXYueM9z70FOm0xLc/zl1v/NB8Wb
      EAUB+XSHR0IhBJcL0e/jG/Nf4IfjDzKo9VGcqfPWnrcSkAPnrwIrhCiIaI0Kjz/8Sy7etOVE
      A3j6icdwu7xc++bFjR+aB2JuvOFGALpjHbdUf+v/Pb3LJvdZY5omqfLyXK1h1Gpoc3MoQ0PL
      kr/F8pOdPshUXqd3YJiN64dONABNrZEvZPnxgw9w55134Xkd7Zz/dO6nfP7Q57GnYD5cOOf5
      azMzlJ96+qQGoOfySIGlueNWAsellyAFAjC+0pKsDLquk89mSUyN4/J4TzSAW26/cyXkOicc
      Lf//7Z1/cBTlGcc/e7d7dzkul0tySSABUyMJQkhIYiCAPzgRo1QkIKVTFZCKVmvHVlvMWIY6
      jnRQR5SWWNHGKXamzqiDbWXG3wIt8kMxUzQtxJAQYhK4ACa5JJdc7m73tn9sDIn5HS7RwH7+
      ub273fd9d+Z99n33fb/P81Tzbv075AYyOaCUjHp9frkDs2iB6GiasrKJLjuG8c03h+yxFE6M
      DseQ5MPm1FTt4BI1AGdyOrcnp3d9vyikEHJDA8G6ulEpW1XVfpWUz+97TvuvuRk6/NrnECIY
      XAhVX1f22R4pKQnr3IG1+91JtiYzLXIa8ZZ4LrNeuvmHLwoDCJysxvdF6aiUvfv4+1R8XQ7P
      PgsuFxQVaQkdgPZg+6DXq6EQ8tnwRVV7/cjfUEIK0yOnM8kykTRbGk6zc9jlbJq5iVfzXmV1
      8moem/FY2No33hi3cuj2QBsWKaLfJGtTIqZQlF3Evs8/5FeZjxAp/ZTBu2vf9fgCPpg1C5YW
      gM/HqWlO3ji+lTpfHVsrtvIwPZ/IR+pKMBlNpFe1Iu/7mBa3m1jXArjtthG0oG92zt9JU3sj
      E0w2TOLIXtScE+LITroqbG0aj4xLAyiuKqbsRCnxCZMo+MFy+ogtRqQUSUFSAeVflnLLpCWY
      BGnYBrDi4ApO1h6nxeBl9Yy1bPjtoxg+PczJ6+L49d5rWeifz58//ysPdev/G/67gfJ2J6oA
      P3mtjOVvuuHK6fBl2YAGoLS0oAYCiE4nATnAnooPuHn6EmRF5mh9KSnxqaw6vAqLB1YcWkFR
      TtEFT13slijSJ2VeUBnjnXFpAE8ce4KE5mgqG6uZ0qSSXJ8KzR6w1vQ6NznmcoyCQQuz4a7X
      HLenTh1SPe1KOx2Knza1DX/Ij5iYiH3prcw1gGeZh627n+LvN7yDIJwXlR1oOEhd7GWECJHT
      WgcMbWPJf6wMpaWZyPx85FCQo/WluNIWsa18G9Unykm84nJ2nd6Fyz+Pf5/+hM0Zm4dUrs7A
      jEsD6MHGjVCVBDYbJJfDPT2nAz/OulPbkd60CV57HXKyIS1tRFUJggCiiAhEGaIwCkbsoh0h
      J0eLhpCRAbay8xdcPR+ScsHrhbw5qKpKqLUV47e9l1wuOO0Gs5kN86t56SaRWR3TeXzXk/iD
      fvICWWw/+pcRtVlnYMa/Abz8MpxNg3Nfc/fNN7AcH7u+2Mnts+8C6CHHME2dijEmfPlou2Le
      lJTAtiK4aw1pFesxnioHASYuWwMRSzTl5RUp4HDQMHceziMlHCl/H4+nAYc9hiuX3IhQdQqU
      EB3pEq1yKXJIxit7kdBUj9FSNNW3VHPwxD7+mXItNunikyx8F4x/A7BYEGyRCD4fJqudBOzc
      nXc/RkNvGYY1d2gvfIrHg2EIGvMHr1vfZWCOO+/AYLdTnFuMN8OLaDBikSIIuus7C9UiLauB
      AH5PA7kf5ZIbyKRcrGL33XtIPyEgNDfjmvFD1Pq9eGrOkp08l0PnDuLwOMhyZGGX7Nx85QhD
      D+r0ybg0gB2zd/Dx0d2kTp7OgrgFWJJ6xoLpq/P34K23CNbUEAypWGdlalOQbjQWv0zsLx8k
      1ZZKyBogToonKaK3zsMinXeYEGNju45t5vNPZ8FiHpLDRkRONqqisNRkYpHzBrY3/5HfZG/A
      6/dSfOh5HnY9OmgZOsNnXBrAooRF1FZXsSDOxWTr4LufvXjlFZSDBwnGxUP+jb0MQFU0Sfe2
      7G20pbdhMpqQjCNzwDA6HESt/JHmmN6JyWBi19U7+azsAA9dNpNUW6oWUqQP8aBBELCIer6F
      0WJcGgBoqr4Rq60LCmDyZPAHwOVCVVVON9eR5JjS69TBgqsOhtCH07ZRsGGcXwAABCdJREFU
      MHBr4q2cranDFe/CYeqpwhQNEjMSZgIQIVm5Z94DF9QGnf4Z1k6wEuyg5MgXqGqIyqP/oaFN
      puZkJcfKK2k4c2rEDjF7Kz7E6/cO65rlmSuZaE8cdl0ArF0L9/8c8vOpz5/D4YZP+dOhP3Ds
      y4/g8cehogI2b9Y+w8XChZpUYoELzg2sVjWJJhbPWApoBjTS0UdncIY1AhhEE5G2CEAg3unA
      KyvIIRGHGKLe6yctJZEz5zxdDjEhnw9EEaEfjXpToIk1h9dgbRDp+Oo5ts99iURL/526qqGS
      lFhtDd8qToAQA6a/GQglpBBSVfbW72V75Qs4WyJ5rqWZFze+iPDCiyj3riMkSeHV9kREgNGA
      bLGALOO0xiEJUv9ZU3TCQneHmG8zLAOQ/T7O1NcTE+OkyV1P+wQzlkArLUGIijRTebKWhCnT
      uhxh2vfvR4xPICInu+/ygjLvnXuPvEAW/5OP41f9fTp0nOk4w7qSdVjdRtonKuyYs4M4c1wf
      JQ7jXgxGDIKAO+DmQOMBrgvOpbblHKIoEnv/zxAkKewebaqqYsnI6LrHpRkrvlOvOZ1h5wiz
      kDcnD4PRSJTtKhAMiMaJhFQwGgVkWUGSOofrwkLUDz5EbWuDwkdQ77sPNRDQEiB0MkGcwPq0
      9TTVnmF+wgKiTdGE2jXBgqFbFpB2pZ233W9zvX8e/3J/QofSEYZb11iWuIw0WxqfHTvAjVm3
      aHWPUvhAQRCIWlbQ47vOd8vwpkAGI2Zz50pFtyf1N4OLJHUbZvx+LTalvwNkGdntxrt7D9Gr
      V3WdYpfsPDPrGf4hvMHC1HyizA7a9u9HlWVs31qZCTemqVcgJk4iyhZNii2FxRMXD758qnPR
      MWarQKqsoHbOdVVVpbqxistjNcf0ZRkrtadhZqZmOAYDXHMNFI9eWA/DN+l4OtE7/6XJ2PgD
      bN8Ov3hAkwQ8+SRKSOkRvrtrKuDzaUuT/gD4/aihEIqneUyaqHNpMjYGsG6d5lCyeDFH77mJ
      TWWbONF2gi3lWwa8TGlsxDPEJMk6OiNhbKZAJhNYIkAUSY/L4XcxmTzj/j3rp63ved6998JX
      NYAKwSDctRbMFtjzGqwck5bqXGKMngFs2QLvvgcJCTBntib3HYzCQvh4P8hBqK3VYljOzCCq
      rozCjYU0VJ1mdsq1RIrjK7KxzveX0TMASQKTBGbTkDJ9f4PBbgc1pBlAJzGmGJ7OfBrvtFZs
      Zr3z64SP0Z0CGYwI/fjs9oclM0M7KO3t5K53fp1wM6ovwbaF12OZmd7rd6PByJL0vmNYCoKg
      rQrdcQeUl8OqVVBW1ue5OjoXypilSVVlGaXJgxg39BAeSksL3j17e+ye6uiEk+99nuDh5LvV
      0Rku3/vAWHrn1xlNRu0lWFVVFEUZreJ1dIaMYYDs9f8Ha87Ib5jwBU4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Volume Traded' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
